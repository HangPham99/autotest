@page "/projectdetail"

@using BlazorApp1.Services.Interface;
@inject NavigationManager NavigationManager
@inject IProjectDetailService ProjectDetailService
<h3>Project Detail</h3>
<br />
<Button Color="Color.Info" Clicked="@ShowModal"> + Add Function</Button>

<Modal @ref="modalRef">
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Add Function</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Function Name</FieldLabel>
                <TextEdit Placeholder="Enter name..." />
            </Field>

            <Field>
                <FieldLabel>Discription</FieldLabel>
                <TextEdit Placeholder="Enter discription..." />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@HideModal">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>
<Table>
    <TableHeader>
        <TableRow>
            <TableHeaderCell>Function name</TableHeaderCell>
            <TableHeaderCell>Milestones</TableHeaderCell>
            <TableHeaderCell>Date Modified</TableHeaderCell>
            <TableHeaderCell>     </TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach (var projectdetail in ListProjectDetail)
        {
            <TableRow>
                <TableRowCell>@projectdetail.FunctionName</TableRowCell>
                <TableRowCell>@projectdetail.Milestones</TableRowCell>
                <TableRowCell>@projectdetail.ModifiedDate</TableRowCell>
                <TableRowCell>
                    <button @onclick="NavigateToCounterComponent"> Test </button>
                    <Icon Name="IconName.Edit" />
                    <Icon Name="IconName.Delete" />
                </TableRowCell>
            </TableRow>
        }
    </TableBody>
</Table>

@code {
    private List<BlazorApp1.Models.ProjectDetail> ListProjectDetail;

    protected override async Task OnInitializedAsync()
    {
        ListProjectDetail = ProjectDetailService.GetAllProject().ToList();
    }
    //modal
    private Modal modalRef;

    private void ShowModal()
    {
        modalRef.Show();
    }

    private void HideModal()
    {
        modalRef.Hide();
    }
    //link
    private void NavigateToCounterComponent() { NavigationManager.NavigateTo("functiontesting"); }

}
