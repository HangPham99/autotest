@using BlazorApp1.Services.Interface
@using BlazorApp1.Models
@inject IProjectService _service
@inject IJSRuntime JsRuntime;

<div class="simple-form">

    <div class="form-group">
        <label for="movie-name">Project Name</label>
        <input @bind="@NewProject.ProjectName" type="text" class="form-control" id="project-name" />
    </div>

    <div class="form-group">
        <label for="year">Link</label>
        <input @bind="@NewProject.Link" type="text" class="form-control" id="project-link" />
    </div>

    <button @onclick="SaveProject" class="btn btn-primary">Submit</button>
    <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
</div>

@code {

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    private BlazorApp1.Models.Project NewProject { get; set; }

    protected override void OnInitialized()
    {
        NewProject = new Project();
    }

    async void SaveProject()
    {
        NewProject.CreateDate = DateTime.UtcNow;
        NewProject.ModifiedDate = DateTime.UtcNow;
        try
        {
            await _service.AddProject(NewProject);
            await ModalInstance.CloseAsync(ModalResult.Ok<Project>(NewProject));
        }
        catch
        {
            await JsRuntime.InvokeVoidAsync("Error", "Something when wrong");
        }

    }

    async void Cancel()
    {
        await ModalInstance.CancelAsync();
    }

}